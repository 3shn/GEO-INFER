{
  "timestamp": "2025-06-18T07:07:20.016526",
  "command": "osc_setup_all.py",
  "args": {
    "output_dir": "./ext/os-climate",
    "skip_tests": false,
    "force_clone": false,
    "report_file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/src/geo_infer_space/osc_geo/utils/reports/osc_setup_report_20250618_070720.json"
  },
  "repos": [
    {
      "action": "clone",
      "repo": "osc-geo-h3grid-srv",
      "url": "https://github.com/os-climate/osc-geo-h3grid-srv.git",
      "path": "./ext/os-climate/osc-geo-h3grid-srv",
      "timestamp": "2025-06-18T07:07:20.016770",
      "success": true,
      "stdout": "",
      "stderr": "Cloning into './ext/os-climate/osc-geo-h3grid-srv'...\n"
    },
    {
      "action": "clone",
      "repo": "osc-geo-h3loader-cli",
      "url": "https://github.com/os-climate/osc-geo-h3loader-cli.git",
      "path": "./ext/os-climate/osc-geo-h3loader-cli",
      "timestamp": "2025-06-18T07:07:33.771752",
      "success": true,
      "stdout": "",
      "stderr": "Cloning into './ext/os-climate/osc-geo-h3loader-cli'...\n"
    }
  ],
  "steps": [
    {
      "name": "clone_repositories",
      "start_time": "2025-06-18T07:07:20.016765",
      "end_time": "2025-06-18T07:07:34.775880",
      "success": true
    },
    {
      "name": "list_structures",
      "start_time": "2025-06-18T07:07:34.775931",
      "end_time": "2025-06-18T07:07:34.780579",
      "success": false
    },
    {
      "name": "setup_and_test",
      "start_time": "2025-06-18T07:07:34.780599",
      "end_time": "2025-06-18T07:11:43.207216",
      "success": false
    }
  ],
  "test_results": {
    "osc-geo-h3grid-srv": {
      "repo": "osc-geo-h3grid-srv",
      "action": "setup_and_test",
      "timestamp": "2025-06-18T07:07:34.780631",
      "steps": [
        {
          "name": "virtual_environment",
          "action": "create",
          "success": true,
          "stdout": "",
          "stderr": ""
        },
        {
          "name": "setup_script",
          "action": "create_and_run",
          "script_path": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/ext/os-climate/osc-geo-h3grid-srv/temp_setup.sh",
          "success": false,
          "stdout": "Installing requirements...\nCollecting duckdb==0.9.2 (from -r requirements.txt (line 1))\n  Downloading duckdb-0.9.2.tar.gz (10.7 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.7/10.7 MB 4.2 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting fastapi==0.109.0 (from -r requirements.txt (line 2))\n  Downloading fastapi-0.109.0-py3-none-any.whl.metadata (24 kB)\nCollecting fastparquet==2024.2.0 (from -r requirements.txt (line 3))\n  Downloading fastparquet-2024.2.0.tar.gz (465 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting folium==0.15.1 (from -r requirements.txt (line 4))\n  Downloading folium-0.15.1-py2.py3-none-any.whl.metadata (3.4 kB)\nCollecting h3==3.7.6 (from -r requirements.txt (line 5))\n  Downloading h3-3.7.6.tar.gz (178 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting numpy==1.26.3 (from -r requirements.txt (line 6))\n  Downloading numpy-1.26.3.tar.gz (15.7 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.7/15.7 MB 2.2 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting geopandas==0.14.2 (from -r requirements.txt (line 7))\n  Downloading geopandas-0.14.2-py3-none-any.whl.metadata (1.5 kB)\nCollecting imagecodecs==2024.1.1 (from -r requirements.txt (line 8))\n  Downloading imagecodecs-2024.1.1.tar.gz (9.5 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 9.5/9.5 MB 2.8 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting requests==2.31.0 (from -r requirements.txt (line 9))\n  Downloading requests-2.31.0-py3-none-any.whl.metadata (4.6 kB)\nCollecting scipy==1.12.0 (from -r requirements.txt (line 10))\n  Downloading scipy-1.12.0.tar.gz (56.8 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.8/56.8 MB 2.6 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'error'\n",
          "stderr": "  error: subprocess-exited-with-error\n  \n  \u00d7 Preparing metadata (pyproject.toml) did not run successfully.\n  \u2502 exit code: 1\n  \u2570\u2500> [54 lines of output]\n      + meson setup /private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888 /private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888/.mesonpy-wdlcxgvm -Dbuildtype=release -Db_ndebug=if-release -Db_vscrt=md --native-file=/private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888/.mesonpy-wdlcxgvm/meson-python-native-file.ini\n      The Meson build system\n      Version: 1.8.2\n      Source dir: /private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888\n      Build dir: /private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888/.mesonpy-wdlcxgvm\n      Build type: native build\n      Project name: scipy\n      Project version: 1.12.0\n      C compiler for the host machine: cc (clang 17.0.0 \"Apple clang version 17.0.0 (clang-1700.0.13.5)\")\n      C linker for the host machine: cc ld64 1167.5\n      C++ compiler for the host machine: c++ (clang 17.0.0 \"Apple clang version 17.0.0 (clang-1700.0.13.5)\")\n      C++ linker for the host machine: c++ ld64 1167.5\n      Cython compiler for the host machine: cython (cython 3.0.12)\n      Host machine cpu family: aarch64\n      Host machine cpu: aarch64\n      Program python found: YES (/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/ext/os-climate/osc-geo-h3grid-srv/venv/bin/python3.13)\n      Did not find pkg-config by name 'pkg-config'\n      Found pkg-config: NO\n      Run-time dependency python found: YES 3.13\n      Program cython found: YES (/private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-build-env-qmsdx5_0/overlay/bin/cython)\n      Compiler for C supports arguments -Wno-unused-but-set-variable: YES\n      Compiler for C supports arguments -Wno-unused-function: YES\n      Compiler for C supports arguments -Wno-conversion: YES\n      Compiler for C supports arguments -Wno-misleading-indentation: YES\n      Library m found: YES\n      \n      ../meson.build:80:0: ERROR: Unknown compiler(s): [['gfortran'], ['flang-new'], ['flang'], ['nvfortran'], ['pgfortran'], ['ifort'], ['ifx'], ['g95']]\n      The following exception(s) were encountered:\n      Running `gfortran --help` gave \"[Errno 2] No such file or directory: 'gfortran'\"\n      Running `gfortran --version` gave \"[Errno 2] No such file or directory: 'gfortran'\"\n      Running `gfortran -V` gave \"[Errno 2] No such file or directory: 'gfortran'\"\n      Running `flang-new --help` gave \"[Errno 2] No such file or directory: 'flang-new'\"\n      Running `flang-new --version` gave \"[Errno 2] No such file or directory: 'flang-new'\"\n      Running `flang-new -V` gave \"[Errno 2] No such file or directory: 'flang-new'\"\n      Running `flang --help` gave \"[Errno 2] No such file or directory: 'flang'\"\n      Running `flang --version` gave \"[Errno 2] No such file or directory: 'flang'\"\n      Running `flang -V` gave \"[Errno 2] No such file or directory: 'flang'\"\n      Running `nvfortran --help` gave \"[Errno 2] No such file or directory: 'nvfortran'\"\n      Running `nvfortran --version` gave \"[Errno 2] No such file or directory: 'nvfortran'\"\n      Running `nvfortran -V` gave \"[Errno 2] No such file or directory: 'nvfortran'\"\n      Running `pgfortran --help` gave \"[Errno 2] No such file or directory: 'pgfortran'\"\n      Running `pgfortran --version` gave \"[Errno 2] No such file or directory: 'pgfortran'\"\n      Running `pgfortran -V` gave \"[Errno 2] No such file or directory: 'pgfortran'\"\n      Running `ifort --help` gave \"[Errno 2] No such file or directory: 'ifort'\"\n      Running `ifort --version` gave \"[Errno 2] No such file or directory: 'ifort'\"\n      Running `ifort -V` gave \"[Errno 2] No such file or directory: 'ifort'\"\n      Running `ifx --help` gave \"[Errno 2] No such file or directory: 'ifx'\"\n      Running `ifx --version` gave \"[Errno 2] No such file or directory: 'ifx'\"\n      Running `ifx -V` gave \"[Errno 2] No such file or directory: 'ifx'\"\n      Running `g95 --help` gave \"[Errno 2] No such file or directory: 'g95'\"\n      Running `g95 --version` gave \"[Errno 2] No such file or directory: 'g95'\"\n      Running `g95 -V` gave \"[Errno 2] No such file or directory: 'g95'\"\n      \n      A full log can be found at /private/var/folders/vc/rgmbpjpj0dbg61vr54xjskc80000gn/T/pip-install-hso0ckns/scipy_ca01eaf66c9a491499bd77beb07b7888/.mesonpy-wdlcxgvm/meson-logs/meson-log.txt\n      [end of output]\n  \n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: metadata-generation-failed\n\n\u00d7 Encountered error while generating package metadata.\n\u2570\u2500> See above for output.\n\nnote: This is an issue with the package mentioned above, not pip.\nhint: See above for details.\n"
        },
        {
          "name": "cleanup",
          "action": "remove_temp_script",
          "success": true
        }
      ],
      "path": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/ext/os-climate/osc-geo-h3grid-srv",
      "tests_passed": false,
      "success": false
    },
    "osc-geo-h3loader-cli": {
      "repo": "osc-geo-h3loader-cli",
      "action": "setup_and_test",
      "timestamp": "2025-06-18T07:09:39.405507",
      "steps": [
        {
          "name": "virtual_environment",
          "action": "create",
          "success": true,
          "stdout": "",
          "stderr": ""
        },
        {
          "name": "setup_script",
          "action": "create_and_run",
          "script_path": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/ext/os-climate/osc-geo-h3loader-cli/temp_setup.sh",
          "success": false,
          "stdout": "Installing requirements...\nCollecting duckdb==0.9.2 (from -r requirements.txt (line 1))\n  Using cached duckdb-0.9.2.tar.gz (10.7 MB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting fastapi==0.109.0 (from -r requirements.txt (line 2))\n  Using cached fastapi-0.109.0-py3-none-any.whl.metadata (24 kB)\nCollecting fastparquet==2024.2.0 (from -r requirements.txt (line 3))\n  Using cached fastparquet-2024.2.0.tar.gz (465 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting folium==0.15.1 (from -r requirements.txt (line 4))\n  Using cached folium-0.15.1-py2.py3-none-any.whl.metadata (3.4 kB)\nCollecting geopandas==0.14.2 (from -r requirements.txt (line 5))\n  Using cached geopandas-0.14.2-py3-none-any.whl.metadata (1.5 kB)\nCollecting h3==3.7.6 (from -r requirements.txt (line 6))\n  Using cached h3-3.7.6.tar.gz (178 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting imagecodecs==2024.1.1 (from -r requirements.txt (line 7))\n  Using cached imagecodecs-2024.1.1.tar.gz (9.5 MB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting numpy==1.26.3 (from -r requirements.txt (line 8))\n  Using cached numpy-1.26.3.tar.gz (15.7 MB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting pandas==2.2.0 (from -r requirements.txt (line 9))\n  Downloading pandas-2.2.0.tar.gz (4.4 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.4/4.4 MB 10.0 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Installing backend dependencies: started\n  Installing backend dependencies: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting pydantic==2.6.0 (from -r requirements.txt (line 10))\n  Downloading pydantic-2.6.0-py3-none-any.whl.metadata (81 kB)\nCollecting pytest==8.2.1 (from -r requirements.txt (line 11))\n  Downloading pytest-8.2.1-py3-none-any.whl.metadata (7.6 kB)\nCollecting PyYAML==6.0.1 (from -r requirements.txt (line 12))\n  Downloading PyYAML-6.0.1.tar.gz (125 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting rasterio==1.3.9 (from -r requirements.txt (line 13))\n  Downloading rasterio-1.3.9.tar.gz (411 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'error'\n",
          "stderr": "  error: subprocess-exited-with-error\n  \n  \u00d7 Getting requirements to build wheel did not run successfully.\n  \u2502 exit code: 1\n  \u2570\u2500> [3 lines of output]\n      <string>:22: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n      WARNING:root:Failed to get options via gdal-config: [Errno 2] No such file or directory: 'gdal-config'\n      ERROR: A GDAL API version must be specified. Provide a path to gdal-config using a GDAL_CONFIG environment variable or use a GDAL_VERSION environment variable.\n      [end of output]\n  \n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: subprocess-exited-with-error\n\n\u00d7 Getting requirements to build wheel did not run successfully.\n\u2502 exit code: 1\n\u2570\u2500> See above for output.\n\nnote: This error originates from a subprocess, and is likely not a problem with pip.\n"
        },
        {
          "name": "cleanup",
          "action": "remove_temp_script",
          "success": true
        }
      ],
      "path": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/ext/os-climate/osc-geo-h3loader-cli",
      "tests_passed": false,
      "success": false
    }
  },
  "directory_structures": {
    "osc-geo-h3grid-srv": "\nDirectory structure for osc-geo-h3grid-srv:\nosc-geo-h3grid-srv/\n\u251c\u2500\u2500 .git/\n\u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2502   \u251c\u2500\u2500 applypatch-msg.sample (478B)\n\u2502   \u2502   \u251c\u2500\u2500 commit-msg.sample (896B)\n\u2502   \u2502   \u251c\u2500\u2500 fsmonitor-watchman.sample (4.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 post-update.sample (189B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-applypatch.sample (424B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-commit.sample (1.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-merge-commit.sample (416B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-push.sample (1.3KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-rebase.sample (4.8KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-receive.sample (544B)\n\u2502   \u2502   \u251c\u2500\u2500 prepare-commit-msg.sample (1.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 push-to-checkout.sample (2.7KB)\n\u2502   \u2502   \u2514\u2500\u2500 update.sample (3.6KB)\n\u2502   \u251c\u2500\u2500 info/\n\u2502   \u2502   \u2514\u2500\u2500 exclude (240B)\n\u2502   \u251c\u2500\u2500 logs/\n\u2502   \u2502   \u251c\u2500\u2500 refs/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 heads/\n\u2502   \u2502   \u2502   \u2502   ...\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 remotes/\n\u2502   \u2502   \u2502       ...\n\u2502   \u2502   \u2514\u2500\u2500 HEAD (214B)\n\u2502   \u251c\u2500\u2500 objects/\n\u2502   \u2502   \u251c\u2500\u2500 info/\n\u2502   \u2502   \u2514\u2500\u2500 pack/\n\u2502   \u2502       \u251c\u2500\u2500 pack-6cb21b0f8851b6419169f7455db5bebd3bdd6714.idx (17.8KB)\n\u2502   \u2502       \u2514\u2500\u2500 pack-6cb21b0f8851b6419169f7455db5bebd3bdd6714.pack (26269.2KB)\n\u2502   \u251c\u2500\u2500 refs/\n\u2502   \u2502   \u251c\u2500\u2500 heads/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 main (41B)\n\u2502   \u2502   \u251c\u2500\u2500 remotes/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 origin/\n\u2502   \u2502   \u2502       ...\n\u2502   \u2502   \u2514\u2500\u2500 tags/\n\u2502   \u251c\u2500\u2500 config (318B)\n\u2502   \u251c\u2500\u2500 description (73B)\n\u2502   \u251c\u2500\u2500 HEAD (21B)\n\u2502   \u251c\u2500\u2500 index (6.8KB)\n\u2502   \u2514\u2500\u2500 packed-refs (112B)\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 start.sh (439B)\n\u2502   \u2514\u2500\u2500 startd.sh (593B)\n\u251c\u2500\u2500 bin/\n\u2502   \u251c\u2500\u2500 dockerize.sh (5.3KB)\n\u2502   \u251c\u2500\u2500 environment.sh (587B)\n\u2502   \u251c\u2500\u2500 show.sh (635B)\n\u2502   \u251c\u2500\u2500 start.sh (460B)\n\u2502   \u251c\u2500\u2500 startd.sh (1.6KB)\n\u2502   \u251c\u2500\u2500 vactivate.sh (1.0KB)\n\u2502   \u2514\u2500\u2500 venv.sh (1.0KB)\n\u251c\u2500\u2500 config/\n\u2502   \u251c\u2500\u2500 config-example.yml (73B)\n\u2502   \u251c\u2500\u2500 config.yml (50B)\n\u2502   \u2514\u2500\u2500 config_docker.yml (55B)\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 docker-compose.yml (561B)\n\u2502   \u2514\u2500\u2500 Dockerfile (596B)\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 getting-started.md (6.6KB)\n\u2502   \u251c\u2500\u2500 README-geospatial.md (20.1KB)\n\u2502   \u251c\u2500\u2500 README-repository.md (4.3KB)\n\u2502   \u251c\u2500\u2500 README-shapefile.md (22.2KB)\n\u2502   \u2514\u2500\u2500 roadmap.md (587B)\n\u251c\u2500\u2500 examples/\n\u2502   \u251c\u2500\u2500 common/\n\u2502   \u2502   \u2514\u2500\u2500 example_datasets/\n\u2502   \u2502       \u251c\u2500\u2500 dataset_metadata.duckdb (1292.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 jamaica_buildings.duckdb (524.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_europe.duckdb (26124.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_germany.duckdb (2572.0KB)\n\u2502   \u2502       \u2514\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_1000y_germany.duckdb (2572.0KB)\n\u2502   \u251c\u2500\u2500 geospatial/\n\u2502   \u2502   \u2514\u2500\u2500 filter-assets/\n\u2502   \u2502       \u251c\u2500\u2500 europe_one_dataset.json (221B)\n\u2502   \u2502       \u251c\u2500\u2500 germany_1_m_generated_assets.zip (7386.3KB)\n\u2502   \u2502       \u251c\u2500\u2500 germany_5_assets.parquet (1.2KB)\n\u2502   \u2502       \u251c\u2500\u2500 germany_datasets.json (684B)\n\u2502   \u2502       \u2514\u2500\u2500 germany_one_dataset.json (343B)\n\u2502   \u2514\u2500\u2500 getting-started/\n\u2502       \u2514\u2500\u2500 giss_2022_12.yml (482B)\n\u251c\u2500\u2500 integration-test/\n\u2502   \u2514\u2500\u2500 test_geomeshcli.py (2.2KB)\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 cli/\n\u2502   \u2502   \u251c\u2500\u2500 cli_geospatial.py (16.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 cli_repository.py (4.2KB)\n\u2502   \u2502   \u251c\u2500\u2500 cli_shapefile.py (6.2KB)\n\u2502   \u2502   \u251c\u2500\u2500 cliexec_geospatial.py (8.3KB)\n\u2502   \u2502   \u251c\u2500\u2500 cliexec_repository.py (1.3KB)\n\u2502   \u2502   \u2514\u2500\u2500 cliexec_shapefile.py (2.0KB)\n\u2502   \u251c\u2500\u2500 common/\n\u2502   \u2502   \u251c\u2500\u2500 const.py (477B)\n\u2502   \u2502   \u251c\u2500\u2500 dataset_utilities.py (716B)\n\u2502   \u2502   \u251c\u2500\u2500 duckdbutils.py (4.2KB)\n\u2502   \u2502   \u2514\u2500\u2500 httputils.py (5.1KB)\n\u2502   \u251c\u2500\u2500 geoserver/\n\u2502   \u2502   \u251c\u2500\u2500 correlator.py (8.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh.py (43.8KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh_router.py (7.4KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh_router_arguments.py (4.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 metadata.py (9.7KB)\n\u2502   \u2502   \u251c\u2500\u2500 point_router.py (5.7KB)\n\u2502   \u2502   \u251c\u2500\u2500 route_constants.py (273B)\n\u2502   \u2502   \u251c\u2500\u2500 server.py (1.9KB)\n\u2502   \u2502   \u2514\u2500\u2500 state.py (690B)\n\u2502   \u2514\u2500\u2500 shape/\n\u2502       \u251c\u2500\u2500 repository.py (3.2KB)\n\u2502       \u2514\u2500\u2500 shape.py (18.2KB)\n\u251c\u2500\u2500 test/\n\u2502   \u251c\u2500\u2500 geoserver_test/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py (264B)\n\u2502   \u2502   \u2514\u2500\u2500 test_correlator.py (10.6KB)\n\u2502   \u2514\u2500\u2500 test_data/\n\u2502       \u2514\u2500\u2500 correlator/\n\u2502           \u251c\u2500\u2500 dataset_metadata.duckdb (1292.0KB)\n\u2502           \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_germany.duckdb (2572.0KB)\n\u2502           \u2514\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_1000y_germany.duckdb (2572.0KB)\n\u251c\u2500\u2500 .gitattributes (16B)\n\u251c\u2500\u2500 .gitignore (257B)\n\u251c\u2500\u2500 LICENSE (1.1KB)\n\u251c\u2500\u2500 pytest.ini (25B)\n\u251c\u2500\u2500 README.md (3.9KB)\n\u2514\u2500\u2500 requirements.txt (332B)",
    "osc-geo-h3loader-cli": "ERROR: [Errno 2] No such file or directory: 'ext/os-climate/osc-geo-h3loader-cli/LICENSE'"
  },
  "all_tests_passed": false,
  "overall_success": false
}