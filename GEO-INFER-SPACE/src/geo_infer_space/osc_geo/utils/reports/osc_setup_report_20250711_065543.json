{
  "timestamp": "2025-07-11T06:55:43.821204",
  "command": "GEO-INFER-SPACE/osc_setup_all.py",
  "args": {
    "output_dir": "./ext/os-climate",
    "skip_tests": false,
    "force_clone": false,
    "report_file": "/home/trim/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/src/geo_infer_space/osc_geo/utils/reports/osc_setup_report_20250711_065543.json"
  },
  "repos": [
    {
      "action": "update",
      "repo": "osc-geo-h3grid-srv",
      "url": "https://github.com/os-climate/osc-geo-h3grid-srv.git",
      "path": "./ext/os-climate/osc-geo-h3grid-srv",
      "timestamp": "2025-07-11T06:55:43.821328",
      "success": true,
      "stdout": "Already up to date.\n",
      "stderr": ""
    },
    {
      "action": "update",
      "repo": "osc-geo-h3loader-cli",
      "url": "https://github.com/os-climate/osc-geo-h3loader-cli.git",
      "path": "./ext/os-climate/osc-geo-h3loader-cli",
      "timestamp": "2025-07-11T06:55:44.334357",
      "success": true,
      "stdout": "Already up to date.\n",
      "stderr": ""
    }
  ],
  "steps": [
    {
      "name": "clone_repositories",
      "start_time": "2025-07-11T06:55:43.821318",
      "end_time": "2025-07-11T06:55:44.853348",
      "success": true
    },
    {
      "name": "list_structures",
      "start_time": "2025-07-11T06:55:44.853394",
      "end_time": "2025-07-11T06:55:44.859232",
      "success": false
    },
    {
      "name": "setup_and_test",
      "start_time": "2025-07-11T06:55:44.859367",
      "end_time": "2025-07-11T06:57:42.444706",
      "success": false
    }
  ],
  "test_results": {
    "osc-geo-h3grid-srv": {
      "repo": "osc-geo-h3grid-srv",
      "action": "setup_and_test",
      "timestamp": "2025-07-11T06:55:44.859459",
      "steps": [
        {
          "name": "virtual_environment",
          "action": "create",
          "existing_removed": true,
          "success": true,
          "stdout": "",
          "stderr": ""
        },
        {
          "name": "setup_script",
          "action": "create_and_run",
          "script_path": "/home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv/temp_setup.sh",
          "success": false,
          "stdout": "Installing requirements...\nCollecting duckdb==0.9.2\n  Downloading duckdb-0.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.5 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 16.5/16.5 MB 9.5 MB/s eta 0:00:00\nCollecting fastapi==0.109.0\n  Downloading fastapi-0.109.0-py3-none-any.whl (92 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 92.0/92.0 KB 8.2 MB/s eta 0:00:00\nCollecting fastparquet==2024.2.0\n  Downloading fastparquet-2024.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 11.5 MB/s eta 0:00:00\nCollecting folium==0.15.1\n  Downloading folium-0.15.1-py2.py3-none-any.whl (97 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 97.0/97.0 KB 8.9 MB/s eta 0:00:00\nCollecting h3==3.7.6\n  Downloading h3-3.7.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 9.6 MB/s eta 0:00:00\nCollecting numpy==1.26.3\n  Downloading numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 18.2/18.2 MB 5.3 MB/s eta 0:00:00\nCollecting geopandas==0.14.2\n  Downloading geopandas-0.14.2-py3-none-any.whl (1.1 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 5.6 MB/s eta 0:00:00\nCollecting imagecodecs==2024.1.1\n  Downloading imagecodecs-2024.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (39.6 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 39.6/39.6 MB 4.3 MB/s eta 0:00:00\nCollecting requests==2.31.0\n  Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 KB 8.5 MB/s eta 0:00:00\nCollecting scipy==1.12.0\n  Downloading scipy-1.12.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.4 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 38.4/38.4 MB 3.8 MB/s eta 0:00:00\nCollecting shapely==2.0.2\n  Downloading shapely-2.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.5 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.5/2.5 MB 5.6 MB/s eta 0:00:00\nCollecting uvicorn==0.27.0.post1\n  Downloading uvicorn-0.27.0.post1-py3-none-any.whl (60 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.7/60.7 KB 4.1 MB/s eta 0:00:00\nCollecting pandas==2.2.0\n  Downloading pandas-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 13.0/13.0 MB 6.4 MB/s eta 0:00:00\nCollecting PyYAML==6.0.1\n  Downloading PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (705 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 705.5/705.5 KB 4.5 MB/s eta 0:00:00\nCollecting pydantic==2.6.0\n  Downloading pydantic-2.6.0-py3-none-any.whl (394 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 394.2/394.2 KB 5.0 MB/s eta 0:00:00\nCollecting pytest==8.2.1\n  Downloading pytest-8.2.1-py3-none-any.whl (339 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 339.6/339.6 KB 4.5 MB/s eta 0:00:00\nCollecting python-multipart==0.0.12\n  Downloading python_multipart-0.0.12-py3-none-any.whl (23 kB)\nCollecting rasterio==1.3.9\n  Downloading rasterio-1.3.9-cp310-cp310-manylinux2014_x86_64.whl (20.6 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 20.6/20.6 MB 6.8 MB/s eta 0:00:00\nCollecting xarray==2023.1.0\n  Downloading xarray-2023.1.0-py3-none-any.whl (973 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 973.1/973.1 KB 7.5 MB/s eta 0:00:00\nCollecting typing-extensions>=4.8.0\n  Downloading typing_extensions-4.14.1-py3-none-any.whl (43 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 43.9/43.9 KB 2.6 MB/s eta 0:00:00\nCollecting starlette<0.36.0,>=0.35.0\n  Downloading starlette-0.35.1-py3-none-any.whl (71 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 71.1/71.1 KB 3.4 MB/s eta 0:00:00\nCollecting packaging\n  Downloading packaging-25.0-py3-none-any.whl (66 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.5/66.5 KB 5.1 MB/s eta 0:00:00\nCollecting fsspec\n  Downloading fsspec-2025.5.1-py3-none-any.whl (199 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 KB 8.7 MB/s eta 0:00:00\nCollecting cramjam>=2.3\n  Downloading cramjam-2.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.0/2.0 MB 6.8 MB/s eta 0:00:00\nCollecting xyzservices\n  Downloading xyzservices-2025.4.0-py3-none-any.whl (90 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.4/90.4 KB 8.1 MB/s eta 0:00:00\nCollecting jinja2>=2.9\n  Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 134.9/134.9 KB 6.8 MB/s eta 0:00:00\nCollecting branca>=0.6.0\n  Downloading branca-0.8.1-py3-none-any.whl (26 kB)\nCollecting pyproj>=3.3.0\n  Downloading pyproj-3.7.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.3 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 9.3/9.3 MB 5.5 MB/s eta 0:00:00\nCollecting fiona>=1.8.21\n  Downloading fiona-1.10.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 4.4 MB/s eta 0:00:00\nCollecting idna<4,>=2.5\n  Downloading idna-3.10-py3-none-any.whl (70 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 70.4/70.4 KB 6.1 MB/s eta 0:00:00\nCollecting charset-normalizer<4,>=2\n  Downloading charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (149 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.5/149.5 KB 7.5 MB/s eta 0:00:00\nCollecting urllib3<3,>=1.21.1\n  Downloading urllib3-2.5.0-py3-none-any.whl (129 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 129.8/129.8 KB 7.8 MB/s eta 0:00:00\nCollecting certifi>=2017.4.17\n  Downloading certifi-2025.7.9-py3-none-any.whl (159 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 159.2/159.2 KB 6.5 MB/s eta 0:00:00\nCollecting click>=7.0\n  Downloading click-8.2.1-py3-none-any.whl (102 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.2/102.2 KB 6.7 MB/s eta 0:00:00\nCollecting h11>=0.8\n  Downloading h11-0.16.0-py3-none-any.whl (37 kB)\nCollecting tzdata>=2022.7\n  Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 347.8/347.8 KB 5.3 MB/s eta 0:00:00\nCollecting python-dateutil>=2.8.2\n  Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 KB 7.0 MB/s eta 0:00:00\nCollecting pytz>=2020.1\n  Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 509.2/509.2 KB 5.3 MB/s eta 0:00:00\nCollecting annotated-types>=0.4.0\n  Downloading annotated_types-0.7.0-py3-none-any.whl (13 kB)\nCollecting pydantic-core==2.16.1\n  Downloading pydantic_core-2.16.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.2 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.2/2.2 MB 5.3 MB/s eta 0:00:00\nCollecting pluggy<2.0,>=1.5\n  Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)\nCollecting iniconfig\n  Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)\nCollecting exceptiongroup>=1.0.0rc8\n  Downloading exceptiongroup-1.3.0-py3-none-any.whl (16 kB)\nCollecting tomli>=1\n  Downloading tomli-2.2.1-py3-none-any.whl (14 kB)\nCollecting click-plugins\n  Downloading click_plugins-1.1.1.2-py2.py3-none-any.whl (11 kB)\nCollecting attrs\n  Downloading attrs-25.3.0-py3-none-any.whl (63 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 63.8/63.8 KB 7.1 MB/s eta 0:00:00\nCollecting affine\n  Downloading affine-2.4.0-py3-none-any.whl (15 kB)\nCollecting cligj>=0.5\n  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\nCollecting snuggs>=1.4.1\n  Downloading snuggs-1.4.7-py3-none-any.whl (5.4 kB)\nRequirement already satisfied: setuptools in ./venv/lib/python3.10/site-packages (from rasterio==1.3.9->-r requirements.txt (line 18)) (59.6.0)\nCollecting MarkupSafe>=2.0\n  Downloading MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (20 kB)\nCollecting six>=1.5\n  Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)\nCollecting pyparsing>=2.1.6\n  Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 111.1/111.1 KB 7.2 MB/s eta 0:00:00\nCollecting anyio<5,>=3.4.0\n  Downloading anyio-4.9.0-py3-none-any.whl (100 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.9/100.9 KB 8.6 MB/s eta 0:00:00\nCollecting sniffio>=1.1\n  Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)\nInstalling collected packages: pytz, h3, xyzservices, urllib3, tzdata, typing-extensions, tomli, sniffio, six, PyYAML, python-multipart, pyparsing, pluggy, packaging, numpy, MarkupSafe, iniconfig, idna, h11, fsspec, duckdb, cramjam, click, charset-normalizer, certifi, attrs, annotated-types, affine, uvicorn, snuggs, shapely, scipy, requests, python-dateutil, pyproj, pydantic-core, jinja2, imagecodecs, exceptiongroup, cligj, click-plugins, rasterio, pytest, pydantic, pandas, fiona, branca, anyio, xarray, starlette, geopandas, folium, fastparquet, fastapi\nSuccessfully installed MarkupSafe-3.0.2 PyYAML-6.0.1 affine-2.4.0 annotated-types-0.7.0 anyio-4.9.0 attrs-25.3.0 branca-0.8.1 certifi-2025.7.9 charset-normalizer-3.4.2 click-8.2.1 click-plugins-1.1.1.2 cligj-0.7.2 cramjam-2.10.0 duckdb-0.9.2 exceptiongroup-1.3.0 fastapi-0.109.0 fastparquet-2024.2.0 fiona-1.10.1 folium-0.15.1 fsspec-2025.5.1 geopandas-0.14.2 h11-0.16.0 h3-3.7.6 idna-3.10 imagecodecs-2024.1.1 iniconfig-2.1.0 jinja2-3.1.6 numpy-1.26.3 packaging-25.0 pandas-2.2.0 pluggy-1.6.0 pydantic-2.6.0 pydantic-core-2.16.1 pyparsing-3.2.3 pyproj-3.7.1 pytest-8.2.1 python-dateutil-2.9.0.post0 python-multipart-0.0.12 pytz-2025.2 rasterio-1.3.9 requests-2.31.0 scipy-1.12.0 shapely-2.0.2 six-1.17.0 sniffio-1.3.1 snuggs-1.4.7 starlette-0.35.1 tomli-2.2.1 typing-extensions-4.14.1 tzdata-2025.2 urllib3-2.5.0 uvicorn-0.27.0.post1 xarray-2023.1.0 xyzservices-2025.4.0\nCreating minimal setup.py for installation...\nObtaining file:///home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nInstalling collected packages: osc-geo-h3grid-srv\n  Running setup.py develop for osc-geo-h3grid-srv\nSuccessfully installed osc-geo-h3grid-srv-0.1.0\n\nRunning tests for osc-geo-h3grid-srv...\n============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.2.1, pluggy-1.6.0 -- /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 6 items\n\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_output_contains_all_possible_cell_resolutions FAILED [ 16%]\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_drop_if_no_match_in_dataset FAILED [ 33%]\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_filter_works_with_one_filter FAILED [ 50%]\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_filters_one_dataset FAILED [ 66%]\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_datasets_no_filters FAILED [ 83%]\ntest/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_datasets_one_filter_each FAILED [100%]\n\n=================================== FAILURES ===================================\n______ TestCorrelator.test_output_contains_all_possible_cell_resolutions _______\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbce350>\n\n    def test_output_contains_all_possible_cell_resolutions(self):\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"Berlin\",\n                lat=52.52,\n                long=13.40\n            ),\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"greater_than\",\n                        target_value=-0.1  # should return every point\n                    )\n                ]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bbccbb0>\ndf = [LocatedAsset(id='Berlin', lat=52.52, long=13.4)], resolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n_______________ TestCorrelator.test_drop_if_no_match_in_dataset ________________\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbcdff0>\n\n    def test_drop_if_no_match_in_dataset(self):\n        # If you pass a point outside the geographic region of a dataset\n        # do not include it\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"NOT_IN_GERMANY\",\n                lat=0,\n                long=0\n            )\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"greater_than\",\n                        target_value=-0.1  # should return every point\n                    )\n                ]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bb3c2e0>\ndf = [LocatedAsset(id='NOT_IN_GERMANY', lat=0.0, long=0.0)], resolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n_______________ TestCorrelator.test_filter_works_with_one_filter _______________\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbcd9c0>\n\n    def test_filter_works_with_one_filter(self):\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"Berlin\",\n                lat=52.52,\n                long=13.40\n                # flood_risk_min    = 0.177\n                # flood_risk_max    = 7.451\n                # flood_risk_median = 7.131\n                # flood_risk_mean   = 5.416\n            ),\n            LocatedAsset(\n                id=\"Frankfurt\",\n                lat=50.11,\n                long=8.68\n                # flood_risk_min    = 0.0261\n                # flood_risk_max    = 6.888\n                # flood_risk_median = 5.338\n                # flood_risk_mean   = 4.228\n            ),\n            LocatedAsset(\n                id=\"Brunsb\u00fcttel\",\n                lat=53.89,\n                long=9.13\n                # flood_risk_min    = 0.170\n                # flood_risk_max    = 3.313\n                # flood_risk_median = 1.536\n                # flood_risk_mean   = 1.471\n            )\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"greater_than\",\n                        target_value=4  # should filter out Brunsb\u00fcttel\n                    )\n                ]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bbce980>\ndf = [LocatedAsset(id='Berlin', lat=52.52, long=13.4), LocatedAsset(id='Frankfurt', lat=50.11, long=8.68), LocatedAsset(id='Brunsb\u00fcttel', lat=53.89, long=9.13)]\nresolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n_______________ TestCorrelator.test_multiple_filters_one_dataset _______________\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbcd960>\n\n    def test_multiple_filters_one_dataset(self):\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"Berlin\",\n                lat=52.52,\n                long=13.40\n                # flood_risk_min    = 0.177\n                # flood_risk_max    = 7.451\n                # flood_risk_median = 7.131\n                # flood_risk_mean   = 5.416\n            ),\n            LocatedAsset(\n                id=\"Frankfurt\",\n                lat=50.11,\n                long=8.68\n                # flood_risk_min    = 0.0261\n                # flood_risk_max    = 6.888\n                # flood_risk_median = 5.338\n                # flood_risk_mean   = 4.228\n            ),\n            LocatedAsset(\n                id=\"Brunsb\u00fcttel\",\n                lat=53.89,\n                long=9.13\n                # flood_risk_min    = 0.170\n                # flood_risk_max    = 3.313\n                # flood_risk_median = 1.536\n                # flood_risk_mean   = 1.471\n            )\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"lesser_than\",\n                        target_value=7  # should filter out Berlin\n                    ),\n                    AssetFilter(\n                        column=\"flood_risk_min\",\n                        filter_type=\"greater_than\",\n                        target_value=0.1  # should filter out Brunsb\u00fcttel\n                    )\n                ]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bb26410>\ndf = [LocatedAsset(id='Berlin', lat=52.52, long=13.4), LocatedAsset(id='Frankfurt', lat=50.11, long=8.68), LocatedAsset(id='Brunsb\u00fcttel', lat=53.89, long=9.13)]\nresolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n_______________ TestCorrelator.test_multiple_datasets_no_filters _______________\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbcd5d0>\n\n    def test_multiple_datasets_no_filters(self):\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"Berlin\",\n                lat=52.52,\n                long=13.40\n                # flood_risk_min    = 0.177\n                # flood_risk_max    = 7.451\n                # flood_risk_median = 7.131\n                # flood_risk_mean   = 5.416\n            ),\n            LocatedAsset(\n                id=\"Frankfurt\",\n                lat=50.11,\n                long=8.68\n                # flood_risk_min    = 0.0261\n                # flood_risk_max    = 6.888\n                # flood_risk_median = 5.338\n                # flood_risk_mean   = 4.228\n            ),\n            LocatedAsset(\n                id=\"Brunsb\u00fcttel\",\n                lat=53.89,\n                long=9.13\n                # flood_risk_min    = 0.170\n                # flood_risk_max    = 3.313\n                # flood_risk_median = 1.536\n                # flood_risk_mean   = 1.471\n            )\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[]\n            ),\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_1000y_germany\",\n                filters=[]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:229: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bb3c520>\ndf = [LocatedAsset(id='Berlin', lat=52.52, long=13.4), LocatedAsset(id='Frankfurt', lat=50.11, long=8.68), LocatedAsset(id='Brunsb\u00fcttel', lat=53.89, long=9.13)]\nresolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n____________ TestCorrelator.test_multiple_datasets_one_filter_each _____________\n\nself = <geoserver_test.test_correlator.TestCorrelator object at 0x72865bbccdf0>\n\n    def test_multiple_datasets_one_filter_each(self):\n        correlator = Correlator(test_dir)\n    \n        assets = [\n            LocatedAsset(\n                id=\"Berlin\",\n                lat=52.52,\n                long=13.40\n                # flood_risk_min 10y    = 0.177\n                # flood_risk_max 10y    = 7.451\n                # flood_risk_min 1000y  = 0.024\n                # flood_risk_max 1000y  = 9.061\n            ),\n            LocatedAsset(\n                id=\"Frankfurt\",\n                lat=50.11,\n                long=8.68\n                # flood_risk_min 10y    = 0.0261\n                # flood_risk_max 10y    = 6.888\n                # flood_risk_min 1000y  = 0.0075\n                # flood_risk_max 1000y  = 8.233\n            ),\n            LocatedAsset(\n                id=\"Brunsb\u00fcttel\",\n                lat=53.89,\n                long=9.13\n                # flood_risk_min 10y    = 0.170\n                # flood_risk_max 10y    = 3.313\n                # flood_risk_min 1000y  = 0.138\n                # flood_risk_max 1000y  = 3.767\n    \n            ),\n            LocatedAsset(\n                id=\"Bremen\",\n                lat=53.08,\n                long=8.803\n                # flood_risk_min 10y    = 0.713\n                # flood_risk_max 10y    = 7.190\n                # flood_risk_min 1000y  = 0.036\n                # flood_risk_max 1000y  = 8.280\n            ),\n            LocatedAsset(\n                id=\"Cologne\",\n                lat=50.95,\n                long=6.95\n                # flood_risk_min 10y    = None\n                # flood_risk_max 10y    = None\n                # flood_risk_min 1000y  = 0.0156\n                # flood_risk_max 1000y  = 5.806\n            )\n        ]\n    \n        datasets = [\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_0010y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"lesser_than\",\n                        target_value=7.3  # should filter out Berlin\n                    ),\n                    AssetFilter(\n                        column=\"flood_risk_min\",\n                        filter_type=\"greater_than\",\n                        target_value=0.1  # should filter out Frankfurt\n                    )\n                ]\n            ),\n            DatasetArg(\n                name=\"tu_delft_river_flood_depth_1971_2000_hist_1000y_germany\",\n                filters=[\n                    AssetFilter(\n                        column=\"flood_risk_max\",\n                        filter_type=\"greater_than\",\n                        target_value=4  # should filter out Brunsb\u00fcttel\n                    ),\n                    AssetFilter(\n                        column=\"flood_risk_min\",\n                        filter_type=\"greater_than\",\n                        target_value=0.03  # should filter out Cologne\n                    )\n                ]\n            )\n        ]\n    \n>       out = correlator.get_correlated_data(assets=assets, datasets=datasets)\n\ntest/geoserver_test/test_correlator.py:325: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/geoserver/correlator.py:53: in get_correlated_data\n    asset_db = self._create_asset_db(assets)\nsrc/geoserver/correlator.py:63: in _create_asset_db\n    self._add_cells(assets, [7])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <geoserver.correlator.Correlator object at 0x72865bb38610>\ndf = [LocatedAsset(id='Berlin', lat=52.52, long=13.4), LocatedAsset(id='Frankfurt', lat=50.11, long=8.68), LocatedAsset(id=...=53.89, long=9.13), LocatedAsset(id='Bremen', lat=53.08, long=8.803), LocatedAsset(id='Cologne', lat=50.95, long=6.95)]\nresolutions = [7]\n\n    def _add_cells(self, df: pandas.DataFrame,\n                   resolutions: List[int]) -> pandas.DataFrame:\n        logger.info(\"attaching cells to data\")\n        # Extract the latitude and longitude columns once for better performance\n        #  As numpy is much faster than pandas\n>       latitudes = df['lat'].to_numpy()\nE       TypeError: list indices must be integers or slices, not str\n\nsrc/geoserver/correlator.py:87: TypeError\n=============================== warnings summary ===============================\nsrc/geoserver/correlator.py:14\n  /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv/src/geoserver/correlator.py:14: DeprecationWarning: \n  Pyarrow will become a required dependency of pandas in the next major release of pandas (pandas 3.0),\n  (to allow more performant data types, such as the Arrow string type, and better interoperability with other libraries)\n  but was not found to be installed on your system.\n  If this would cause problems for you,\n  please provide us feedback at https://github.com/pandas-dev/pandas/issues/54466\n          \n    import pandas\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_output_contains_all_possible_cell_resolutions\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_drop_if_no_match_in_dataset\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_filter_works_with_one_filter\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_filters_one_dataset\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_datasets_no_filters\nFAILED test/geoserver_test/test_correlator.py::TestCorrelator::test_multiple_datasets_one_filter_each\n========================= 6 failed, 1 warning in 0.63s =========================\n",
          "stderr": ""
        },
        {
          "name": "cleanup",
          "action": "remove_temp_script",
          "success": true
        }
      ],
      "path": "/home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3grid-srv",
      "tests_passed": false,
      "success": false
    },
    "osc-geo-h3loader-cli": {
      "repo": "osc-geo-h3loader-cli",
      "action": "setup_and_test",
      "timestamp": "2025-07-11T06:57:01.375593",
      "steps": [
        {
          "name": "virtual_environment",
          "action": "create",
          "existing_removed": true,
          "success": true,
          "stdout": "",
          "stderr": ""
        },
        {
          "name": "setup_script",
          "action": "create_and_run",
          "script_path": "/home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli/temp_setup.sh",
          "success": false,
          "stdout": "Installing requirements...\nCollecting duckdb==0.9.2\n  Using cached duckdb-0.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.5 MB)\nCollecting fastapi==0.109.0\n  Using cached fastapi-0.109.0-py3-none-any.whl (92 kB)\nCollecting fastparquet==2024.2.0\n  Using cached fastparquet-2024.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\nCollecting folium==0.15.1\n  Using cached folium-0.15.1-py2.py3-none-any.whl (97 kB)\nCollecting geopandas==0.14.2\n  Using cached geopandas-0.14.2-py3-none-any.whl (1.1 MB)\nCollecting h3==3.7.6\n  Using cached h3-3.7.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\nCollecting imagecodecs==2024.1.1\n  Using cached imagecodecs-2024.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (39.6 MB)\nCollecting numpy==1.26.3\n  Using cached numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)\nCollecting pandas==2.2.0\n  Using cached pandas-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)\nCollecting pydantic==2.6.0\n  Using cached pydantic-2.6.0-py3-none-any.whl (394 kB)\nCollecting pytest==8.2.1\n  Using cached pytest-8.2.1-py3-none-any.whl (339 kB)\nCollecting PyYAML==6.0.1\n  Using cached PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (705 kB)\nCollecting rasterio==1.3.9\n  Using cached rasterio-1.3.9-cp310-cp310-manylinux2014_x86_64.whl (20.6 MB)\nCollecting requests==2.31.0\n  Using cached requests-2.31.0-py3-none-any.whl (62 kB)\nCollecting scipy==1.12.0\n  Using cached scipy-1.12.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.4 MB)\nCollecting shapely==2.0.2\n  Using cached shapely-2.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.5 MB)\nCollecting uvicorn==0.27.0.post1\n  Using cached uvicorn-0.27.0.post1-py3-none-any.whl (60 kB)\nCollecting xarray==2023.1.0\n  Using cached xarray-2023.1.0-py3-none-any.whl (973 kB)\nCollecting typing-extensions>=4.8.0\n  Using cached typing_extensions-4.14.1-py3-none-any.whl (43 kB)\nCollecting starlette<0.36.0,>=0.35.0\n  Using cached starlette-0.35.1-py3-none-any.whl (71 kB)\nCollecting packaging\n  Using cached packaging-25.0-py3-none-any.whl (66 kB)\nCollecting fsspec\n  Using cached fsspec-2025.5.1-py3-none-any.whl (199 kB)\nCollecting cramjam>=2.3\n  Using cached cramjam-2.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)\nCollecting xyzservices\n  Using cached xyzservices-2025.4.0-py3-none-any.whl (90 kB)\nCollecting branca>=0.6.0\n  Using cached branca-0.8.1-py3-none-any.whl (26 kB)\nCollecting jinja2>=2.9\n  Using cached jinja2-3.1.6-py3-none-any.whl (134 kB)\nCollecting pyproj>=3.3.0\n  Using cached pyproj-3.7.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.3 MB)\nCollecting fiona>=1.8.21\n  Using cached fiona-1.10.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\nCollecting python-dateutil>=2.8.2\n  Using cached python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)\nCollecting tzdata>=2022.7\n  Using cached tzdata-2025.2-py2.py3-none-any.whl (347 kB)\nCollecting pytz>=2020.1\n  Using cached pytz-2025.2-py2.py3-none-any.whl (509 kB)\nCollecting pydantic-core==2.16.1\n  Using cached pydantic_core-2.16.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.2 MB)\nCollecting annotated-types>=0.4.0\n  Using cached annotated_types-0.7.0-py3-none-any.whl (13 kB)\nCollecting exceptiongroup>=1.0.0rc8\n  Using cached exceptiongroup-1.3.0-py3-none-any.whl (16 kB)\nCollecting pluggy<2.0,>=1.5\n  Using cached pluggy-1.6.0-py3-none-any.whl (20 kB)\nCollecting tomli>=1\n  Using cached tomli-2.2.1-py3-none-any.whl (14 kB)\nCollecting iniconfig\n  Using cached iniconfig-2.1.0-py3-none-any.whl (6.0 kB)\nCollecting cligj>=0.5\n  Using cached cligj-0.7.2-py3-none-any.whl (7.1 kB)\nCollecting click>=4.0\n  Using cached click-8.2.1-py3-none-any.whl (102 kB)\nCollecting affine\n  Using cached affine-2.4.0-py3-none-any.whl (15 kB)\nCollecting snuggs>=1.4.1\n  Using cached snuggs-1.4.7-py3-none-any.whl (5.4 kB)\nRequirement already satisfied: setuptools in ./venv/lib/python3.10/site-packages (from rasterio==1.3.9->-r requirements.txt (line 13)) (59.6.0)\nCollecting attrs\n  Using cached attrs-25.3.0-py3-none-any.whl (63 kB)\nCollecting certifi\n  Using cached certifi-2025.7.9-py3-none-any.whl (159 kB)\nCollecting click-plugins\n  Using cached click_plugins-1.1.1.2-py2.py3-none-any.whl (11 kB)\nCollecting idna<4,>=2.5\n  Using cached idna-3.10-py3-none-any.whl (70 kB)\nCollecting urllib3<3,>=1.21.1\n  Using cached urllib3-2.5.0-py3-none-any.whl (129 kB)\nCollecting charset-normalizer<4,>=2\n  Using cached charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (149 kB)\nCollecting h11>=0.8\n  Using cached h11-0.16.0-py3-none-any.whl (37 kB)\nCollecting MarkupSafe>=2.0\n  Using cached MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (20 kB)\nCollecting six>=1.5\n  Using cached six-1.17.0-py2.py3-none-any.whl (11 kB)\nCollecting pyparsing>=2.1.6\n  Using cached pyparsing-3.2.3-py3-none-any.whl (111 kB)\nCollecting anyio<5,>=3.4.0\n  Using cached anyio-4.9.0-py3-none-any.whl (100 kB)\nCollecting sniffio>=1.1\n  Using cached sniffio-1.3.1-py3-none-any.whl (10 kB)\nInstalling collected packages: pytz, h3, xyzservices, urllib3, tzdata, typing-extensions, tomli, sniffio, six, PyYAML, pyparsing, pluggy, packaging, numpy, MarkupSafe, iniconfig, idna, h11, fsspec, duckdb, cramjam, click, charset-normalizer, certifi, attrs, annotated-types, affine, uvicorn, snuggs, shapely, scipy, requests, python-dateutil, pyproj, pydantic-core, jinja2, imagecodecs, exceptiongroup, cligj, click-plugins, rasterio, pytest, pydantic, pandas, fiona, branca, anyio, xarray, starlette, geopandas, folium, fastparquet, fastapi\nSuccessfully installed MarkupSafe-3.0.2 PyYAML-6.0.1 affine-2.4.0 annotated-types-0.7.0 anyio-4.9.0 attrs-25.3.0 branca-0.8.1 certifi-2025.7.9 charset-normalizer-3.4.2 click-8.2.1 click-plugins-1.1.1.2 cligj-0.7.2 cramjam-2.10.0 duckdb-0.9.2 exceptiongroup-1.3.0 fastapi-0.109.0 fastparquet-2024.2.0 fiona-1.10.1 folium-0.15.1 fsspec-2025.5.1 geopandas-0.14.2 h11-0.16.0 h3-3.7.6 idna-3.10 imagecodecs-2024.1.1 iniconfig-2.1.0 jinja2-3.1.6 numpy-1.26.3 packaging-25.0 pandas-2.2.0 pluggy-1.6.0 pydantic-2.6.0 pydantic-core-2.16.1 pyparsing-3.2.3 pyproj-3.7.1 pytest-8.2.1 python-dateutil-2.9.0.post0 pytz-2025.2 rasterio-1.3.9 requests-2.31.0 scipy-1.12.0 shapely-2.0.2 six-1.17.0 sniffio-1.3.1 snuggs-1.4.7 starlette-0.35.1 tomli-2.2.1 typing-extensions-4.14.1 tzdata-2025.2 urllib3-2.5.0 uvicorn-0.27.0.post1 xarray-2023.1.0 xyzservices-2025.4.0\nCreating minimal setup.py for installation...\nObtaining file:///home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nInstalling collected packages: osc-geo-h3loader-cli\n  Running setup.py develop for osc-geo-h3loader-cli\nSuccessfully installed osc-geo-h3loader-cli-0.1.0\n\nRunning tests for osc-geo-h3loader-cli...\n============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.2.1, pluggy-1.6.0 -- /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 66 items / 1 error\n\n==================================== ERRORS ====================================\n_____ ERROR collecting test/load_pipeline/test_loading_pipeline_factory.py _____\nImportError while importing test module '/home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli/test/load_pipeline/test_loading_pipeline_factory.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\ntest/load_pipeline/test_loading_pipeline_factory.py:7: in <module>\n    from load_pipeline.test_loading_pipeline import AddOnePre\nE   ModuleNotFoundError: No module named 'load_pipeline'\n=============================== warnings summary ===============================\ntest/aggregationstep/test_cell_aggreation_step.py:2\n  /home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli/test/aggregationstep/test_cell_aggreation_step.py:2: DeprecationWarning: \n  Pyarrow will become a required dependency of pandas in the next major release of pandas (pandas 3.0),\n  (to allow more performant data types, such as the Arrow string type, and better interoperability with other libraries)\n  but was not found to be installed on your system.\n  If this would cause problems for you,\n  please provide us feedback at https://github.com/pandas-dev/pandas/issues/54466\n          \n    from pandas import DataFrame\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR test/load_pipeline/test_loading_pipeline_factory.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n========================= 1 warning, 1 error in 1.26s ==========================\n",
          "stderr": ""
        },
        {
          "name": "cleanup",
          "action": "remove_temp_script",
          "success": true
        }
      ],
      "path": "/home/trim/Documents/GitHub/GEO-INFER/ext/os-climate/osc-geo-h3loader-cli",
      "tests_passed": false,
      "success": false
    }
  },
  "directory_structures": {
    "osc-geo-h3grid-srv": "\nDirectory structure for osc-geo-h3grid-srv:\nosc-geo-h3grid-srv/\n\u251c\u2500\u2500 .git/\n\u2502   \u251c\u2500\u2500 branches/\n\u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2502   \u251c\u2500\u2500 applypatch-msg.sample (478B)\n\u2502   \u2502   \u251c\u2500\u2500 commit-msg.sample (896B)\n\u2502   \u2502   \u251c\u2500\u2500 fsmonitor-watchman.sample (4.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 post-update.sample (189B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-applypatch.sample (424B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-commit.sample (1.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-merge-commit.sample (416B)\n\u2502   \u2502   \u251c\u2500\u2500 pre-push.sample (1.3KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-rebase.sample (4.8KB)\n\u2502   \u2502   \u251c\u2500\u2500 pre-receive.sample (544B)\n\u2502   \u2502   \u251c\u2500\u2500 prepare-commit-msg.sample (1.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 push-to-checkout.sample (2.7KB)\n\u2502   \u2502   \u2514\u2500\u2500 update.sample (3.6KB)\n\u2502   \u251c\u2500\u2500 info/\n\u2502   \u2502   \u2514\u2500\u2500 exclude (240B)\n\u2502   \u251c\u2500\u2500 logs/\n\u2502   \u2502   \u251c\u2500\u2500 refs/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 heads/\n\u2502   \u2502   \u2502   \u2502   ...\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 remotes/\n\u2502   \u2502   \u2502       ...\n\u2502   \u2502   \u2514\u2500\u2500 HEAD (214B)\n\u2502   \u251c\u2500\u2500 objects/\n\u2502   \u2502   \u251c\u2500\u2500 info/\n\u2502   \u2502   \u2514\u2500\u2500 pack/\n\u2502   \u2502       \u251c\u2500\u2500 pack-6cb21b0f8851b6419169f7455db5bebd3bdd6714.idx (17.8KB)\n\u2502   \u2502       \u2514\u2500\u2500 pack-6cb21b0f8851b6419169f7455db5bebd3bdd6714.pack (26269.2KB)\n\u2502   \u251c\u2500\u2500 refs/\n\u2502   \u2502   \u251c\u2500\u2500 heads/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 main (41B)\n\u2502   \u2502   \u251c\u2500\u2500 remotes/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 origin/\n\u2502   \u2502   \u2502       ...\n\u2502   \u2502   \u2514\u2500\u2500 tags/\n\u2502   \u251c\u2500\u2500 config (273B)\n\u2502   \u251c\u2500\u2500 description (73B)\n\u2502   \u251c\u2500\u2500 FETCH_HEAD (108B)\n\u2502   \u251c\u2500\u2500 HEAD (21B)\n\u2502   \u251c\u2500\u2500 index (6.8KB)\n\u2502   \u251c\u2500\u2500 ORIG_HEAD (41B)\n\u2502   \u2514\u2500\u2500 packed-refs (112B)\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 start.sh (439B)\n\u2502   \u2514\u2500\u2500 startd.sh (593B)\n\u251c\u2500\u2500 bin/\n\u2502   \u251c\u2500\u2500 dockerize.sh (5.3KB)\n\u2502   \u251c\u2500\u2500 environment.sh (587B)\n\u2502   \u251c\u2500\u2500 show.sh (635B)\n\u2502   \u251c\u2500\u2500 start.sh (460B)\n\u2502   \u251c\u2500\u2500 startd.sh (1.6KB)\n\u2502   \u251c\u2500\u2500 vactivate.sh (1.0KB)\n\u2502   \u2514\u2500\u2500 venv.sh (1.0KB)\n\u251c\u2500\u2500 config/\n\u2502   \u251c\u2500\u2500 config-example.yml (73B)\n\u2502   \u251c\u2500\u2500 config.yml (50B)\n\u2502   \u2514\u2500\u2500 config_docker.yml (55B)\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 docker-compose.yml (561B)\n\u2502   \u2514\u2500\u2500 Dockerfile (596B)\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 getting-started.md (6.6KB)\n\u2502   \u251c\u2500\u2500 README-geospatial.md (20.1KB)\n\u2502   \u251c\u2500\u2500 README-repository.md (4.3KB)\n\u2502   \u251c\u2500\u2500 README-shapefile.md (22.2KB)\n\u2502   \u2514\u2500\u2500 roadmap.md (587B)\n\u251c\u2500\u2500 examples/\n\u2502   \u251c\u2500\u2500 common/\n\u2502   \u2502   \u2514\u2500\u2500 example_datasets/\n\u2502   \u2502       \u251c\u2500\u2500 dataset_metadata.duckdb (1292.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 jamaica_buildings.duckdb (524.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_europe.duckdb (26124.0KB)\n\u2502   \u2502       \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_germany.duckdb (2572.0KB)\n\u2502   \u2502       \u2514\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_1000y_germany.duckdb (2572.0KB)\n\u2502   \u251c\u2500\u2500 geospatial/\n\u2502   \u2502   \u2514\u2500\u2500 filter-assets/\n\u2502   \u2502       \u251c\u2500\u2500 europe_one_dataset.json (221B)\n\u2502   \u2502       \u251c\u2500\u2500 germany_1_m_generated_assets.zip (7386.3KB)\n\u2502   \u2502       \u251c\u2500\u2500 germany_5_assets.parquet (1.2KB)\n\u2502   \u2502       \u251c\u2500\u2500 germany_datasets.json (684B)\n\u2502   \u2502       \u2514\u2500\u2500 germany_one_dataset.json (343B)\n\u2502   \u2514\u2500\u2500 getting-started/\n\u2502       \u2514\u2500\u2500 giss_2022_12.yml (482B)\n\u251c\u2500\u2500 integration-test/\n\u2502   \u2514\u2500\u2500 test_geomeshcli.py (2.2KB)\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 cli/\n\u2502   \u2502   \u251c\u2500\u2500 cli_geospatial.py (16.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 cli_repository.py (4.2KB)\n\u2502   \u2502   \u251c\u2500\u2500 cli_shapefile.py (6.2KB)\n\u2502   \u2502   \u251c\u2500\u2500 cliexec_geospatial.py (8.3KB)\n\u2502   \u2502   \u251c\u2500\u2500 cliexec_repository.py (1.3KB)\n\u2502   \u2502   \u2514\u2500\u2500 cliexec_shapefile.py (2.0KB)\n\u2502   \u251c\u2500\u2500 common/\n\u2502   \u2502   \u251c\u2500\u2500 const.py (477B)\n\u2502   \u2502   \u251c\u2500\u2500 dataset_utilities.py (716B)\n\u2502   \u2502   \u251c\u2500\u2500 duckdbutils.py (4.2KB)\n\u2502   \u2502   \u2514\u2500\u2500 httputils.py (5.1KB)\n\u2502   \u251c\u2500\u2500 geoserver/\n\u2502   \u2502   \u251c\u2500\u2500 correlator.py (8.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh.py (43.8KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh_router.py (7.4KB)\n\u2502   \u2502   \u251c\u2500\u2500 geomesh_router_arguments.py (4.5KB)\n\u2502   \u2502   \u251c\u2500\u2500 metadata.py (9.7KB)\n\u2502   \u2502   \u251c\u2500\u2500 point_router.py (5.7KB)\n\u2502   \u2502   \u251c\u2500\u2500 route_constants.py (273B)\n\u2502   \u2502   \u251c\u2500\u2500 server.py (1.9KB)\n\u2502   \u2502   \u2514\u2500\u2500 state.py (690B)\n\u2502   \u2514\u2500\u2500 shape/\n\u2502       \u251c\u2500\u2500 repository.py (3.2KB)\n\u2502       \u2514\u2500\u2500 shape.py (18.2KB)\n\u251c\u2500\u2500 test/\n\u2502   \u251c\u2500\u2500 geoserver_test/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py (264B)\n\u2502   \u2502   \u2514\u2500\u2500 test_correlator.py (10.6KB)\n\u2502   \u2514\u2500\u2500 test_data/\n\u2502       \u2514\u2500\u2500 correlator/\n\u2502           \u251c\u2500\u2500 dataset_metadata.duckdb (1292.0KB)\n\u2502           \u251c\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_0010y_germany.duckdb (2572.0KB)\n\u2502           \u2514\u2500\u2500 tu_delft_river_flood_depth_1971_2000_hist_1000y_germany.duckdb (2572.0KB)\n\u251c\u2500\u2500 venv/\n\u2502   \u251c\u2500\u2500 bin/\n\u2502   \u2502   \u251c\u2500\u2500 python (5798.6KB)\n\u2502   \u2502   \u251c\u2500\u2500 python3 (5798.6KB)\n\u2502   \u2502   \u2514\u2500\u2500 python3.10 (5798.6KB)\n\u2502   \u251c\u2500\u2500 include/\n\u2502   \u251c\u2500\u2500 lib/\n\u2502   \u2502   \u2514\u2500\u2500 python3.10/\n\u2502   \u2502       \u2514\u2500\u2500 site-packages/\n\u2502   \u2502           ...\n\u2502   \u251c\u2500\u2500 lib64/\n\u2502   \u2502   \u2514\u2500\u2500 python3.10/\n\u2502   \u2502       \u2514\u2500\u2500 site-packages/\n\u2502   \u2502           ...\n\u2502   \u2514\u2500\u2500 pyvenv.cfg (71B)\n\u251c\u2500\u2500 .gitattributes (16B)\n\u251c\u2500\u2500 .gitignore (257B)\n\u251c\u2500\u2500 LICENSE (1.1KB)\n\u251c\u2500\u2500 pytest.ini (25B)\n\u251c\u2500\u2500 README.md (3.9KB)\n\u2514\u2500\u2500 requirements.txt (332B)",
    "osc-geo-h3loader-cli": "ERROR: [Errno 2] No such file or directory: 'ext/os-climate/osc-geo-h3loader-cli/LICENSE'"
  },
  "all_tests_passed": false,
  "overall_success": false
}