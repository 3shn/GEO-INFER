{
  "timestamp": "/Users/4d/Documents/GitHub/GEO-INFER",
  "python_version": "3.12.11 (main, Jul 12 2025, 16:37:15) [Clang 17.0.0 (clang-1700.0.13.5)]",
  "results": {
    "path_manager": true,
    "module_imports": {
      "geo_infer_req": {
        "status": "success",
        "version": "unknown",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-REQ/src/geo_infer_req/__init__.py"
      },
      "geo_infer_iot": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-IOT/src/geo_infer_iot/__init__.py"
      },
      "geo_infer_git": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-GIT/src/geo_infer_git/__init__.py"
      },
      "geo_infer_org": {
        "status": "success",
        "version": "unknown",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-ORG/src/geo_infer_org/__init__.py"
      },
      "geo_infer_space": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SPACE/src/geo_infer_space/__init__.py"
      },
      "geo_infer_app": {
        "status": "success",
        "version": "unknown",
        "file": null
      },
      "geo_infer_cog": {
        "status": "success",
        "version": "unknown",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-COG/src/geo_infer_cog/__init__.py"
      },
      "geo_infer_place": {
        "status": "success",
        "version": "1.0.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-PLACE/src/geo_infer_place/__init__.py"
      },
      "geo_infer_intra": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-INTRA/src/geo_infer_intra/__init__.py"
      },
      "geo_infer_norms": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_math": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_examples": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-EXAMPLES/src/geo_infer_examples/__init__.py"
      },
      "geo_infer_api": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-API/src/geo_infer_api/__init__.py"
      },
      "geo_infer_health": {
        "status": "success",
        "version": "unknown",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-HEALTH/src/geo_infer_health/__init__.py"
      },
      "geo_infer_agent": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-AGENT/src/geo_infer_agent/__init__.py"
      },
      "geo_infer_bio": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_act": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-ACT/src/geo_infer_act/__init__.py"
      },
      "geo_infer_art": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_sec": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-SEC/src/geo_infer_sec/__init__.py"
      },
      "geo_infer_comms": {
        "status": "success",
        "version": "unknown",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-COMMS/src/geo_infer_comms/__init__.py"
      },
      "geo_infer_bayes": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-BAYES/src/geo_infer_bayes/__init__.py"
      },
      "geo_infer_econ": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_risk": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_log": {
        "status": "success",
        "version": "1.0.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-LOG/src/geo_infer_log/__init__.py"
      },
      "geo_infer_test": {
        "status": "success",
        "version": "1.0.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-TEST/src/geo_infer_test/__init__.py"
      },
      "geo_infer_ops": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-OPS/src/geo_infer_ops/__init__.py"
      },
      "geo_infer_ag": {
        "status": "failed",
        "error": "Import returned None"
      },
      "geo_infer_pep": {
        "status": "success",
        "version": "0.1.0",
        "file": "/Users/4d/Documents/GitHub/GEO-INFER/GEO-INFER-PEP/src/geo_infer_pep/__init__.py"
      }
    },
    "cross_module_imports": {
      "geo_infer_place.PlaceAnalyzer": {
        "status": "success",
        "type": "type"
      },
      "geo_infer_space.setup_osc_geo": {
        "status": "success",
        "type": "function"
      },
      "geo_infer_iot.IoTDataIngestion": {
        "status": "success",
        "type": "type"
      },
      "geo_infer_bayes.GaussianProcess": {
        "status": "success",
        "type": "type"
      },
      "geo_infer_act.ActiveInferenceModel": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_agent.AgentFramework": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_art.ArtisticVisualization": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_sec.SecurityFramework": {
        "status": "success",
        "type": "type"
      },
      "geo_infer_test.TestRunner": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_api.APIManager": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_norms.ComplianceFramework": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_ops.OperationsManager": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_examples.ExampleRunner": {
        "status": "not_found",
        "error": "Item not found in module"
      },
      "geo_infer_git.GitManager": {
        "status": "not_found",
        "error": "Item not found in module"
      }
    },
    "framework_entry_point": {
      "framework_loaded": true,
      "module_count": 21,
      "diagnostics": {
        "framework_version": "1.0.0",
        "python_version": "3.12.11 (main, Jul 12 2025, 16:37:15) [Clang 17.0.0 (clang-1700.0.13.5)]",
        "loaded_modules": 21,
        "module_list": [
          "geo_infer_req",
          "geo_infer_iot",
          "geo_infer_git",
          "geo_infer_org",
          "geo_infer_space",
          "geo_infer_app",
          "geo_infer_cog",
          "geo_infer_place",
          "geo_infer_intra",
          "geo_infer_examples",
          "geo_infer_api",
          "geo_infer_health",
          "geo_infer_agent",
          "geo_infer_act",
          "geo_infer_sec",
          "geo_infer_comms",
          "geo_infer_bayes",
          "geo_infer_log",
          "geo_infer_test",
          "geo_infer_ops",
          "geo_infer_pep"
        ],
        "module_info": {
          "geo_infer_req": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_iot": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-IOT\n\nInternet of Things sensors and spatial web integration for the GEO-INFER framework.\nThis module provides comprehensive capabilities for ingesting, processing, and analyzing \nIoT sensor data in spatial context, enabling real-time environmental monitoring and \nBayesian spatial inference at global scale.\n\nKey components:\n- IoT data ingestion from multiple protocols (MQTT, CoAP, LoRaWAN, HTTP)\n- Real-time spatial data fusion with H3 indexing\n- Bayesian spatial inference for converting point measurements to continuous surfaces\n- Quality control and sensor network management\n- Integration with environmental monitoring systems\n",
            "author": "Unknown"
          },
          "geo_infer_git": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-GIT - Git repository cloning tools for GEO-INFER framework.\n\nThis module provides functionality to clone multiple GitHub repositories\nbased on specified users and repository configurations.\n",
            "author": "Unknown"
          },
          "geo_infer_org": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_space": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-SPACE - Advanced geospatial methods for the GEO-INFER framework.\n\nThis module provides powerful spatial indexing, analytics, and integration\nwith external geospatial tools and libraries.\n",
            "author": "Unknown"
          },
          "geo_infer_app": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_cog": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_place": {
            "version": "1.0.0",
            "description": "\nGEO-INFER-PLACE: Place-Based Geospatial Analysis Framework\n\nThis module provides comprehensive place-based analysis capabilities for specific\ngeographic locations, integrating multiple GEO-INFER modules to create deep,\nlocation-specific insights.\n\nKey Features:\n- Location-specific data integration and analysis\n- Multi-domain analysis (forest health, coastal resilience, fire risk, community development)\n- Real-time data access from government and research APIs\n- Interactive visualization and dashboard generation\n- Community engagement and stakeholder integration\n\nCore Components:\n- Place Analyzer: Main orchestration engine\n- Location Modules: Specific implementations for different places\n- Data Integrators: Real-time data access and processing\n- Visualization Engine: Interactive dashboard and map generation\n- Community Interface: Stakeholder engagement tools\n\nSupported Locations:\n- Del Norte County, California (forest health, coastal resilience, fire risk)\n- Additional locations can be added following the same framework\n\nExample Usage:\n    >>> from geo_infer_place import PlaceAnalyzer\n    >>> analyzer = PlaceAnalyzer('del_norte_county')\n    >>> analyzer.run_comprehensive_analysis()\n    >>> analyzer.generate_interactive_dashboard()\n",
            "author": "GEO-INFER Development Team"
          },
          "geo_infer_intra": {
            "version": "0.1.0",
            "description": "GEO-INFER-INTRA - Knowledge management backbone for the GEO-INFER framework.",
            "author": "GEO-INFER Team"
          },
          "geo_infer_examples": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-EXAMPLES: Comprehensive demonstration framework for the GEO-INFER ecosystem.\n",
            "author": "Unknown"
          },
          "geo_infer_api": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-API package.\n\nA standardized API for geospatial interoperability within the GEO-INFER framework.\n",
            "author": "Unknown"
          },
          "geo_infer_health": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_agent": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-AGENT - Autonomous agent framework for geospatial applications\n\nThis module provides functionality for:\n- Creating intelligent autonomous agents\n- Orchestrating multi-agent systems\n- Implementing active inference for decision-making\n- Supporting various agent architectures\n- Handling geospatial perception and action\n",
            "author": "Unknown"
          },
          "geo_infer_act": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-ACT: Active Inference modeling module for GEO-INFER framework.\n\nThis module provides mathematical and computational tools for modeling complex\necological and civic systems using principles from active inference theory.\n",
            "author": "GEO-INFER Development Team"
          },
          "geo_infer_sec": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-SEC provides security and privacy frameworks for sensitive geospatial information.\n\nThis module ensures that geospatial data is collected, processed, shared, \nand stored in a manner that protects individual privacy, organizational \nsecurity, and complies with relevant regulations.\n",
            "author": "GEO-INFER Team"
          },
          "geo_infer_comms": {
            "version": "unknown",
            "description": null,
            "author": "Unknown"
          },
          "geo_infer_bayes": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-BAYES: Bayesian inference for geospatial applications\n======================================================================\n\nThis module provides a comprehensive framework for Bayesian inference\nprocesses within the GEO-INFER ecosystem, implementing probabilistic modeling,\nuncertainty quantification, and Bayesian computational methods for geospatial\napplications.\n",
            "author": "GEO-INFER Team"
          },
          "geo_infer_log": {
            "version": "1.0.0",
            "description": "\nGEO-INFER-LOG: Comprehensive Logging and Monitoring Module\n\nThis module provides advanced logging, monitoring, and observability capabilities\nfor the GEO-INFER framework. It supports structured logging, performance metrics,\ndistributed tracing, and integration with monitoring systems.\n\nKey Features:\n- Structured JSON logging with spatial context\n- Performance metrics collection and analysis\n- Real-time log aggregation and search\n- Integration with monitoring systems (Prometheus, Grafana)\n- Distributed tracing for multi-module workflows\n- Log-based alerting and anomaly detection\n",
            "author": "Unknown"
          },
          "geo_infer_test": {
            "version": "1.0.0",
            "description": "\nGEO-INFER-TEST: Comprehensive Testing and Quality Assurance Module\n\nThis module provides testing, validation, and quality assurance capabilities\nfor the GEO-INFER framework. It supports unit testing, integration testing,\nperformance testing, and data quality validation.\n\nKey Features:\n- Automated test suite execution\n- Data quality validation and monitoring\n- Performance benchmarking and regression testing\n- Integration testing across modules\n- Spatial data validation\n- IoT sensor data quality control\n- Bayesian inference validation\n",
            "author": "Unknown"
          },
          "geo_infer_ops": {
            "version": "0.1.0",
            "description": "\nGEO-INFER-OPS: Operations and infrastructure management for GEO-INFER framework.\n\nThis module provides the core infrastructure for the GEO-INFER framework, ensuring\nreliable, scalable, and maintainable operations across all components.\n",
            "author": "Unknown"
          },
          "geo_infer_pep": {
            "version": "0.1.0",
            "description": null,
            "author": "Unknown"
          }
        },
        "import_tests": {
          "geo_infer_space": {
            "status": "loaded",
            "description": "SPACE module"
          },
          "geo_infer_place": {
            "status": "loaded",
            "description": "PLACE module"
          },
          "geo_infer_iot": {
            "status": "loaded",
            "description": "IOT module"
          },
          "geo_infer_bayes": {
            "status": "loaded",
            "description": "BAYES module"
          }
        }
      }
    },
    "specific_functionality": {
      "space_h3": {
        "status": "success",
        "description": "H3 spatial indexing"
      },
      "place_analyzer": {
        "status": "success",
        "description": "Place-based analysis"
      },
      "iot_ingestion": {
        "status": "success",
        "description": "IoT data ingestion"
      },
      "bayes_gp": {
        "status": "success",
        "description": "Bayesian Gaussian processes"
      }
    }
  },
  "summary": {
    "total_tests": 46,
    "passed_tests": 30,
    "failed_tests": 16,
    "success_rate": 65.21739130434783
  }
}