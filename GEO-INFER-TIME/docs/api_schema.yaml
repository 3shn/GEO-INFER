openapi: 3.0.3
info:
  title: GEO-INFER-TIME API
  description: |
    Temporal Methods for Dynamic Geospatial Data
    
    Provides temporal analysis, forecasting, and time-series processing
    capabilities for geospatial systems.
  version: 1.0.0
  contact:
    name: GEO-INFER Temporal Team
  license:
    name: CC BY-NC-SA 4.0
    url: https://creativecommons.org/licenses/by-nc-sa/4.0/

servers:
  - url: https://time-api.geo-infer.org/v1
    description: Production temporal server
  - url: http://localhost:8003/v1
    description: Local development server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  # Time Series Management
  /timeseries:
    get:
      summary: List time series
      description: Returns a list of available time series datasets
      operationId: listTimeSeries
      tags:
        - Time Series
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
        - name: temporal_filter
          in: query
          schema:
            type: string
            description: "ISO 8601 interval filter"
      responses:
        '200':
          description: List of time series
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesList'
    post:
      summary: Create time series
      description: Creates a new time series dataset
      operationId: createTimeSeries
      tags:
        - Time Series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesCreate'
      responses:
        '201':
          description: Time series created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeries'

  /timeseries/{timeseriesId}:
    get:
      summary: Get time series details
      description: Returns detailed information about a specific time series
      operationId: getTimeSeries
      tags:
        - Time Series
      parameters:
        - name: timeseriesId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Time series details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeries'
    put:
      summary: Update time series
      description: Updates time series metadata
      operationId: updateTimeSeries
      tags:
        - Time Series
      parameters:
        - name: timeseriesId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesUpdate'
      responses:
        '200':
          description: Time series updated successfully
    delete:
      summary: Delete time series
      description: Removes a time series dataset
      operationId: deleteTimeSeries
      tags:
        - Time Series
      parameters:
        - name: timeseriesId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Time series deleted successfully

  /timeseries/{timeseriesId}/data:
    get:
      summary: Get time series data
      description: Returns time series data points
      operationId: getTimeSeriesData
      tags:
        - Time Series
      parameters:
        - name: timeseriesId
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          schema:
            type: string
            format: date-time
        - name: resolution
          in: query
          schema:
            type: string
            enum: [raw, hourly, daily, weekly, monthly, yearly]
            default: raw
        - name: aggregation
          in: query
          schema:
            type: string
            enum: [mean, sum, min, max, count, median]
            default: mean
      responses:
        '200':
          description: Time series data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesData'
    post:
      summary: Add time series data
      description: Adds new data points to a time series
      operationId: addTimeSeriesData
      tags:
        - Time Series
      parameters:
        - name: timeseriesId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesDataInput'
      responses:
        '201':
          description: Data added successfully

  # Temporal Analysis
  /analysis/trends:
    post:
      summary: Trend analysis
      description: Performs trend analysis on time series data
      operationId: analyzeTrends
      tags:
        - Temporal Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrendAnalysisRequest'
      responses:
        '200':
          description: Trend analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendAnalysisResponse'

  /analysis/seasonality:
    post:
      summary: Seasonality analysis
      description: Analyzes seasonal patterns in time series data
      operationId: analyzeSeasonality
      tags:
        - Temporal Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonalityAnalysisRequest'
      responses:
        '200':
          description: Seasonality analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonalityAnalysisResponse'

  /analysis/anomalies:
    post:
      summary: Anomaly detection
      description: Detects anomalies in time series data
      operationId: detectAnomalies
      tags:
        - Temporal Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnomalyDetectionRequest'
      responses:
        '200':
          description: Anomaly detection results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnomalyDetectionResponse'

  /analysis/changepoints:
    post:
      summary: Change point detection
      description: Detects change points in time series data
      operationId: detectChangePoints
      tags:
        - Temporal Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePointDetectionRequest'
      responses:
        '200':
          description: Change point detection results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePointDetectionResponse'

  # Forecasting
  /forecast/arima:
    post:
      summary: ARIMA forecasting
      description: Performs ARIMA model forecasting
      operationId: forecastARIMA
      tags:
        - Forecasting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ARIMAForecastRequest'
      responses:
        '200':
          description: ARIMA forecast results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastResponse'

  /forecast/prophet:
    post:
      summary: Prophet forecasting
      description: Performs Prophet model forecasting
      operationId: forecastProphet
      tags:
        - Forecasting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProphetForecastRequest'
      responses:
        '200':
          description: Prophet forecast results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastResponse'

  /forecast/lstm:
    post:
      summary: LSTM forecasting
      description: Performs LSTM neural network forecasting
      operationId: forecastLSTM
      tags:
        - Forecasting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LSTMForecastRequest'
      responses:
        '200':
          description: LSTM forecast results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastResponse'

  # Real-time Processing
  /realtime/streams:
    get:
      summary: List data streams
      description: Returns list of real-time data streams
      operationId: listDataStreams
      tags:
        - Real-time Processing
      responses:
        '200':
          description: List of data streams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStream'
    post:
      summary: Create data stream
      description: Creates a new real-time data stream
      operationId: createDataStream
      tags:
        - Real-time Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStreamCreate'
      responses:
        '201':
          description: Data stream created successfully

  /realtime/streams/{streamId}/status:
    get:
      summary: Get stream status
      description: Returns status of a real-time data stream
      operationId: getStreamStatus
      tags:
        - Real-time Processing
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stream status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatus'

  # Events and Timelines
  /events:
    get:
      summary: List events
      description: Returns list of detected temporal events
      operationId: listEvents
      tags:
        - Events
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          schema:
            type: string
            format: date-time
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemporalEvent'
    post:
      summary: Create event
      description: Creates a new temporal event
      operationId: createEvent
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporalEventCreate'
      responses:
        '201':
          description: Event created successfully

  /timelines/{timelineId}:
    get:
      summary: Get timeline
      description: Returns a constructed timeline of events
      operationId: getTimeline
      tags:
        - Events
      parameters:
        - name: timelineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Timeline data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Time Series schemas
    TimeSeriesList:
      type: object
      required:
        - timeseries
        - pagination
      properties:
        timeseries:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesSummary'
        pagination:
          $ref: '#/components/schemas/Pagination'

    TimeSeriesSummary:
      type: object
      required:
        - id
        - name
        - start_time
        - end_time
        - frequency
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        frequency:
          type: string
          enum: [irregular, seconds, minutes, hourly, daily, weekly, monthly, yearly]
        data_type:
          type: string
          enum: [numeric, categorical, boolean]
        units:
          type: string
        spatial_reference:
          type: object
          properties:
            geometry:
              $ref: '#/components/schemas/Geometry'
            location_name:
              type: string

    TimeSeries:
      allOf:
        - $ref: '#/components/schemas/TimeSeriesSummary'
        - type: object
          properties:
            metadata:
              type: object
            quality_metrics:
              type: object
              properties:
                completeness:
                  type: number
                accuracy:
                  type: number
                consistency:
                  type: number
            statistics:
              type: object
              properties:
                count:
                  type: integer
                min:
                  type: number
                max:
                  type: number
                mean:
                  type: number
                std:
                  type: number

    TimeSeriesCreate:
      type: object
      required:
        - name
        - frequency
        - data_type
      properties:
        name:
          type: string
        description:
          type: string
        frequency:
          type: string
          enum: [irregular, seconds, minutes, hourly, daily, weekly, monthly, yearly]
        data_type:
          type: string
          enum: [numeric, categorical, boolean]
        units:
          type: string
        spatial_reference:
          type: object
        metadata:
          type: object

    TimeSeriesUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        metadata:
          type: object

    TimeSeriesData:
      type: object
      required:
        - timestamps
        - values
      properties:
        timestamps:
          type: array
          items:
            type: string
            format: date-time
        values:
          type: array
          items:
            oneOf:
              - type: number
              - type: string
              - type: boolean
              - type: "null"
        metadata:
          type: object

    TimeSeriesDataInput:
      type: object
      required:
        - data_points
      properties:
        data_points:
          type: array
          items:
            type: object
            required:
              - timestamp
              - value
            properties:
              timestamp:
                type: string
                format: date-time
              value:
                oneOf:
                  - type: number
                  - type: string
                  - type: boolean
              quality:
                type: string
                enum: [good, estimated, poor, missing]

    # Analysis schemas
    TrendAnalysisRequest:
      type: object
      required:
        - timeseries_id
      properties:
        timeseries_id:
          type: string
        method:
          type: string
          enum: [linear, polynomial, lowess, moving_average]
          default: linear
        parameters:
          type: object

    TrendAnalysisResponse:
      type: object
      required:
        - trend_direction
        - trend_strength
      properties:
        trend_direction:
          type: string
          enum: [increasing, decreasing, stable]
        trend_strength:
          type: number
          minimum: 0
          maximum: 1
        trend_equation:
          type: string
        confidence_interval:
          type: object
          properties:
            lower:
              type: array
              items:
                type: number
            upper:
              type: array
              items:
                type: number
        p_value:
          type: number

    SeasonalityAnalysisRequest:
      type: object
      required:
        - timeseries_id
      properties:
        timeseries_id:
          type: string
        periods:
          type: array
          items:
            type: integer
        method:
          type: string
          enum: [fft, autocorrelation, stl, x13]
          default: stl

    SeasonalityAnalysisResponse:
      type: object
      required:
        - seasonal_periods
      properties:
        seasonal_periods:
          type: array
          items:
            type: object
            properties:
              period:
                type: integer
              strength:
                type: number
              significance:
                type: number
        seasonal_decomposition:
          type: object
          properties:
            trend:
              type: array
              items:
                type: number
            seasonal:
              type: array
              items:
                type: number
            residual:
              type: array
              items:
                type: number

    AnomalyDetectionRequest:
      type: object
      required:
        - timeseries_id
      properties:
        timeseries_id:
          type: string
        method:
          type: string
          enum: [isolation_forest, local_outlier_factor, z_score, iqr, prophet]
          default: isolation_forest
        sensitivity:
          type: number
          minimum: 0
          maximum: 1
          default: 0.05

    AnomalyDetectionResponse:
      type: object
      required:
        - anomalies
      properties:
        anomalies:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              value:
                type: number
              anomaly_score:
                type: number
              severity:
                type: string
                enum: [low, medium, high, critical]

    ChangePointDetectionRequest:
      type: object
      required:
        - timeseries_id
      properties:
        timeseries_id:
          type: string
        method:
          type: string
          enum: [pelt, binary_segmentation, bayesian, cusum]
          default: pelt
        penalty:
          type: number

    ChangePointDetectionResponse:
      type: object
      required:
        - changepoints
      properties:
        changepoints:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              confidence:
                type: number
              magnitude:
                type: number

    # Forecasting schemas
    ARIMAForecastRequest:
      type: object
      required:
        - timeseries_id
        - forecast_periods
      properties:
        timeseries_id:
          type: string
        forecast_periods:
          type: integer
          minimum: 1
        order:
          type: object
          properties:
            p:
              type: integer
            d:
              type: integer
            q:
              type: integer
        seasonal_order:
          type: object
          properties:
            P:
              type: integer
            D:
              type: integer
            Q:
              type: integer
            s:
              type: integer
        auto_select:
          type: boolean
          default: true

    ProphetForecastRequest:
      type: object
      required:
        - timeseries_id
        - forecast_periods
      properties:
        timeseries_id:
          type: string
        forecast_periods:
          type: integer
          minimum: 1
        yearly_seasonality:
          type: boolean
          default: true
        weekly_seasonality:
          type: boolean
          default: true
        daily_seasonality:
          type: boolean
          default: false
        holidays:
          type: array
          items:
            type: object

    LSTMForecastRequest:
      type: object
      required:
        - timeseries_id
        - forecast_periods
      properties:
        timeseries_id:
          type: string
        forecast_periods:
          type: integer
          minimum: 1
        sequence_length:
          type: integer
          default: 50
        hidden_units:
          type: integer
          default: 50
        epochs:
          type: integer
          default: 100

    ForecastResponse:
      type: object
      required:
        - forecast
        - model_info
      properties:
        forecast:
          type: object
          properties:
            timestamps:
              type: array
              items:
                type: string
                format: date-time
            values:
              type: array
              items:
                type: number
            confidence_intervals:
              type: object
              properties:
                lower:
                  type: array
                  items:
                    type: number
                upper:
                  type: array
                  items:
                    type: number
        model_info:
          type: object
          properties:
            model_type:
              type: string
            parameters:
              type: object
            performance_metrics:
              type: object
            training_period:
              type: object

    # Real-time schemas
    DataStream:
      type: object
      required:
        - id
        - name
        - source_type
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        source_type:
          type: string
          enum: [websocket, kafka, mqtt, http_polling]
        source_config:
          type: object
        status:
          type: string
          enum: [active, inactive, error]
        data_format:
          type: string
          enum: [json, csv, xml]
        processing_rules:
          type: array
          items:
            type: object

    DataStreamCreate:
      type: object
      required:
        - name
        - source_type
        - source_config
      properties:
        name:
          type: string
        description:
          type: string
        source_type:
          type: string
          enum: [websocket, kafka, mqtt, http_polling]
        source_config:
          type: object
        data_format:
          type: string
          enum: [json, csv, xml]
        processing_rules:
          type: array
          items:
            type: object

    StreamStatus:
      type: object
      required:
        - status
        - last_update
      properties:
        status:
          type: string
          enum: [active, inactive, error]
        last_update:
          type: string
          format: date-time
        messages_processed:
          type: integer
        error_count:
          type: integer
        throughput:
          type: object
          properties:
            messages_per_second:
              type: number
            bytes_per_second:
              type: number

    # Event schemas
    TemporalEvent:
      type: object
      required:
        - id
        - timestamp
        - event_type
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        event_type:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        spatial_reference:
          $ref: '#/components/schemas/Geometry'
        metadata:
          type: object

    TemporalEventCreate:
      type: object
      required:
        - timestamp
        - event_type
      properties:
        timestamp:
          type: string
          format: date-time
        event_type:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        spatial_reference:
          $ref: '#/components/schemas/Geometry'
        metadata:
          type: object

    Timeline:
      type: object
      required:
        - id
        - events
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/TemporalEvent'
        metadata:
          type: object

    # Utility schemas
    Geometry:
      type: object
      properties:
        type:
          type: string
        coordinates:
          type: array

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

tags:
  - name: Time Series
    description: Time series data management
  - name: Temporal Analysis
    description: Temporal pattern analysis
  - name: Forecasting
    description: Time series forecasting
  - name: Real-time Processing
    description: Real-time data stream processing
  - name: Events
    description: Temporal event management 